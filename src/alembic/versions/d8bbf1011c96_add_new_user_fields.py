"""add_new_user_fields

Revision ID: d8bbf1011c96
Revises: 25ccdb2c33f8
Create Date: 2023-02-18 19:57:30.756497

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "d8bbf1011c96"
down_revision = "25ccdb2c33f8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("first_name", sa.String(length=31), nullable=True))
    op.add_column("user", sa.Column("last_name", sa.String(length=31), nullable=True))
    op.add_column(
        "user", sa.Column("phone_number", sa.String(length=15), nullable=True)
    )
    op.add_column(
        "user",
        sa.Column(
            "can_be_dinner_host", sa.Boolean(), server_default="f", nullable=False
        ),
    )
    op.add_column("user", sa.Column("address", sa.String(length=127), nullable=True))
    op.add_column(
        "user", sa.Column("is_staff", sa.Boolean(), server_default="f", nullable=False)
    )
    op.drop_constraint("user_email_key", "user", type_="unique")
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.create_unique_constraint("user_email_key", "user", ["email"])
    op.drop_column("user", "is_staff")
    op.drop_column("user", "address")
    op.drop_column("user", "can_be_dinner_host")
    op.drop_column("user", "phone_number")
    op.drop_column("user", "last_name")
    op.drop_column("user", "first_name")
    # ### end Alembic commands ###
